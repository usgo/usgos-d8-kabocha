{ "rules_publish_oldest_ready_weekly_problem" : {
        "LABEL" : "Publish oldest ready weekly problem",
            "PLUGIN" : "rule",
                "REQUIRES" : [ "rules", "php", "rules_scheduler" ],
                    "DO" : [
                          { "variable_add" : {
                                        "USING" : { "type" : "boolean", "value" : 1 },
                                                  "PROVIDE" : { "variable_added" : { "true" : "True" } }
                                                          }
                                                                },
                                                                      { "entity_query" : {
                                                                                    "USING" : {
                                                                                                    "type" : "node",
                                                                                                                "property" : "field_ready",
                                                                                                                            "value" : [ "true" ],
                                                                                                                                        "limit" : "100000"
                                                                                                                                                  },
                                                                                                                                                            "PROVIDE" : { "entity_fetched" : { "ready_nodes" : "Ready nodes" } }
                                                                                                                                                                    }
                                                                                                                                                                          },
                                                                                                                                                                                { "php_eval" : { "code" : "function unpublished_problem($n) {\r\n    return $n-\u003estatus != 1 \u0026\u0026 $n-\u003etype == 'problem';\r\n}\r\n$filtered = array_filter($ready_nodes, \"unpublished_problem\");\r\nif (!empty($filtered)) {\r\n    $to_publish = array_pop($filtered);\r\n    foreach ($filtered as $to_test) {\r\n        if (intval($to_publish-\u003ecreated) \u003e intval($to_test-\u003ecreated)) {\r\n            $to_publish = $to_test;\r\n        }\r\n    }\r\n    $to_publish-\u003estatus = 1;\r\n    node_save($to_publish);\r\n}" } },
                                                                                                                                                                                      { "schedule" : {
                                                                                                                                                                                                    "component" : "rules_publish_oldest_ready_weekly_problem",
                                                                                                                                                                                                              "date" : { "select" : "site:current-date", "date_offset" : { "value" : 604800 } },
                                                                                                                                                                                                                        "identifier" : "weekly problem publish"
                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                      }
                                                                                                                                                                                                                                          ]
                                                                                                                                                                                                                                            }
}
